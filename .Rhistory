library(readxl)
library(rlang)
library(shiny)
# Chunk 2
# install.packages("readxl")
library(readxl)
mydata <- read_excel("Penguin data.xlsx")
mydata<- mydata[, -17]
miss_count <- colSums(is.na(mydata))
mydata <- na.omit(mydata)
mydata$"Culmen Length (mm)" <- as.numeric(mydata$"Culmen Length (mm)")
mydata$"Culmen Depth (mm)" <- as.numeric(mydata$"Culmen Depth (mm)")
mydata$"Flipper Length (mm)" <- as.numeric(mydata$"Flipper Length (mm)")
mydata$"Body Mass (g)" <- as.numeric(mydata$"Body Mass (g)")
mydata$"Delta 15 N (o/oo)" <- as.numeric(mydata$"Delta 15 N (o/oo)")
mydata$"Delta 13 C (o/oo)" <- as.numeric(mydata$"Delta 13 C (o/oo)")
mydata <- mydata %>% mutate(Sex = ifelse(Sex == "MALE", "MALE", "FEMALE"))
# Chunk 3
renderPlot({
filtered_data <- mydata %>% filter(Species %in% input$species)
ggplot(filtered_data, aes(x = Island, fill = Species)) +
geom_bar(position = "stack") +
labs(title = "Penguin Species Counts by Island", x = "Island", y = "Count", fill = "Species")})
# Chunk 4
renderPlot({
filtered_data <- mydata %>% filter(Species %in% input$species)
ggplot(filtered_data, aes(x = `Culmen Length (mm)`, y = `Body Mass (g)`, color = Sex)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Relationship between Culmen Length and Body Mass by Sex", x = "Culmen Length (mm)", y = "Body Mass (g)", color = "Sex")
})
# Chunk 5
renderPlot({
filtered_data <- mydata %>% filter(Species %in% input$species)
ggplot(filtered_data, aes(x = `Culmen Length (mm)`, y = `Body Mass (g)`, color = Species)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Relationship between Culmen Length and Body Mass by Species", x = "Culmen Length (mm)", y = "Body Mass (g)", color = "Species")
})
# Chunk 6
renderPlot({
filtered_data <- mydata %>% filter(Species %in% input$species)
ggplot(filtered_data, aes(x = `Culmen Length (mm)`, y = `Culmen Depth (mm)`, color = Species)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Relationship between Culmen Length and Depth by Species", x = "Culmen Length (mm)", y = "Culmen Depth (mm)", color = "Species")
})
# Chunk 7
library(scales)
# convert Date Egg column to date format
mydata$`Date Egg` <- as.Date(mydata$`Date Egg`)
ggplot(mydata, aes(x = `Date Egg`, y = `Culmen Depth (mm)`)) +
geom_point(alpha = 0.2) +
geom_smooth() +
labs(title = "Trend of Culmen Depth (mm) by Island over Time", x = "Date", y = "Culmen Depth (mm)") +
facet_grid(. ~ Island) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")
# Chunk 8
# create scatter plot of body mass vs. flipper length
ggplot(mydata, aes(x = `Flipper Length (mm)`, y = `Body Mass (g)`, color = Species)) +
geom_point(size = 2) +
labs(x = "Flipper Length (mm)", y = "Body Mass (g)", color = "Species") +
ggtitle("Body Mass vs. Flipper Length by Species")
# Chunk 9
library(scales)
library(stringr)
# convert Date Egg column to date format
mydata$`Date Egg` <- as.Date(mydata$`Date Egg`)
# extract first word of species names
mydata$short_species <- str_extract(mydata$Species, "^\\w+")
# create scatter plot of culmen length vs. year, faceted by species and sex
ggplot(mydata, aes(x = `Date Egg`, y = `Culmen Length (mm)`, color = Sex)) +
geom_point(alpha = 0.5) +
geom_smooth(se = FALSE) +
facet_grid(short_species ~ ., labeller = label_parsed) +
labs(x = "Year", y = "Culmen Length (mm)", color = "Sex") +
ggtitle("Trend of Culmen Length by Species and Sex over Time") +
scale_x_date(date_breaks = "3 months", date_labels = "%b %Y")
# Chunk 10
ggplot(mydata, aes(x = `Body Mass (g)`, y = `Delta 15 N (o/oo)`)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Body Mass (g)", y = "Delta 15 N (o/oo)",
title = "Relationship between Body Mass and Delta 15 N") +
theme_bw()
# Chunk 11
library(ggplot2)
ggplot(mydata, aes(x = `Body Mass (g)`, y = `Delta 13 C (o/oo)`)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Body Mass (g)", y = "Delta 13 C (o/oo)",
title = "Relationship between Body Mass and Delta 13 C (o/oo)") +
theme_bw()
rmarkdown::render("Dashboard assign #2.Rmd", output_file = "E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work/Dashboard_assign_2.html")
# Chunk 1: setup
library(flexdashboard)
library(shiny)
library(ggplot2)
library(plotly)
library(dplyr)
library(readxl)
library(rlang)
library(shiny)
# Chunk 2
# install.packages("readxl")
library(readxl)
mydata <- read_excel("Penguin data.xlsx")
mydata<- mydata[, -17]
miss_count <- colSums(is.na(mydata))
mydata <- na.omit(mydata)
mydata$"Culmen Length (mm)" <- as.numeric(mydata$"Culmen Length (mm)")
mydata$"Culmen Depth (mm)" <- as.numeric(mydata$"Culmen Depth (mm)")
mydata$"Flipper Length (mm)" <- as.numeric(mydata$"Flipper Length (mm)")
mydata$"Body Mass (g)" <- as.numeric(mydata$"Body Mass (g)")
mydata$"Delta 15 N (o/oo)" <- as.numeric(mydata$"Delta 15 N (o/oo)")
mydata$"Delta 13 C (o/oo)" <- as.numeric(mydata$"Delta 13 C (o/oo)")
mydata <- mydata %>% mutate(Sex = ifelse(Sex == "MALE", "MALE", "FEMALE"))
# Chunk 3
ggplot(filtered_data, aes(x = Island, fill = Species)) +
geom_bar(position = "stack") +
labs(title = "Penguin Species Counts by Island", x = "Island", y = "Count", fill = "Species")
# Chunk 1: setup
library(flexdashboard)
library(shiny)
library(ggplot2)
library(plotly)
library(dplyr)
library(readxl)
library(rlang)
library(shiny)
# Chunk 2
# install.packages("readxl")
library(readxl)
mydata <- read_excel("Penguin data.xlsx")
mydata<- mydata[, -17]
miss_count <- colSums(is.na(mydata))
mydata <- na.omit(mydata)
mydata$"Culmen Length (mm)" <- as.numeric(mydata$"Culmen Length (mm)")
mydata$"Culmen Depth (mm)" <- as.numeric(mydata$"Culmen Depth (mm)")
mydata$"Flipper Length (mm)" <- as.numeric(mydata$"Flipper Length (mm)")
mydata$"Body Mass (g)" <- as.numeric(mydata$"Body Mass (g)")
mydata$"Delta 15 N (o/oo)" <- as.numeric(mydata$"Delta 15 N (o/oo)")
mydata$"Delta 13 C (o/oo)" <- as.numeric(mydata$"Delta 13 C (o/oo)")
mydata <- mydata %>% mutate(Sex = ifelse(Sex == "MALE", "MALE", "FEMALE"))
# Chunk 3
ggplot(mydata, aes(x = Island, fill = Species)) +
geom_bar(position = "stack") +
labs(title = "Penguin Species Counts by Island", x = "Island", y = "Count", fill = "Species")
# Chunk 4
ggplot(mydata, aes(x = `Culmen Length (mm)`, y = `Body Mass (g)`, color = Sex)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Relationship between Culmen Length and Body Mass by Sex", x = "Culmen Length (mm)", y = "Body Mass (g)", color = "Sex")
# Chunk 5
ggplot(mydata, aes(x = `Culmen Length (mm)`, y = `Body Mass (g)`, color = Species)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Relationship between Culmen Length and Body Mass by Species", x = "Culmen Length (mm)", y = "Body Mass (g)", color = "Species")
# Chunk 6
ggplot(mydata, aes(x = `Culmen Length (mm)`, y = `Culmen Depth (mm)`, color = Species)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Relationship between Culmen Length and Depth by Species", x = "Culmen Length (mm)", y = "Culmen Depth (mm)", color = "Species")
# Chunk 7
library(scales)
# convert Date Egg column to date format
mydata$`Date Egg` <- as.Date(mydata$`Date Egg`)
ggplot(mydata, aes(x = `Date Egg`, y = `Culmen Depth (mm)`)) +
geom_point(alpha = 0.2) +
geom_smooth() +
labs(title = "Trend of Culmen Depth (mm) by Island over Time", x = "Date", y = "Culmen Depth (mm)") +
facet_grid(. ~ Island) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")
# Chunk 8
# create scatter plot of body mass vs. flipper length
ggplot(mydata, aes(x = `Flipper Length (mm)`, y = `Body Mass (g)`, color = Species)) +
geom_point(size = 2) +
labs(x = "Flipper Length (mm)", y = "Body Mass (g)", color = "Species") +
ggtitle("Body Mass vs. Flipper Length by Species")
# Chunk 9
library(scales)
library(stringr)
# convert Date Egg column to date format
mydata$`Date Egg` <- as.Date(mydata$`Date Egg`)
# extract first word of species names
mydata$short_species <- str_extract(mydata$Species, "^\\w+")
# create scatter plot of culmen length vs. year, faceted by species and sex
ggplot(mydata, aes(x = `Date Egg`, y = `Culmen Length (mm)`, color = Sex)) +
geom_point(alpha = 0.5) +
geom_smooth(se = FALSE) +
facet_grid(short_species ~ ., labeller = label_parsed) +
labs(x = "Year", y = "Culmen Length (mm)", color = "Sex") +
ggtitle("Trend of Culmen Length by Species and Sex over Time") +
scale_x_date(date_breaks = "3 months", date_labels = "%b %Y")
# Chunk 10
ggplot(mydata, aes(x = `Body Mass (g)`, y = `Delta 15 N (o/oo)`)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Body Mass (g)", y = "Delta 15 N (o/oo)",
title = "Relationship between Body Mass and Delta 15 N") +
theme_bw()
# Chunk 11
library(ggplot2)
ggplot(mydata, aes(x = `Body Mass (g)`, y = `Delta 13 C (o/oo)`)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Body Mass (g)", y = "Delta 13 C (o/oo)",
title = "Relationship between Body Mass and Delta 13 C (o/oo)") +
theme_bw()
rmarkdown::render("Dashboard assign #2.Rmd", output_file = "E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work/Dashboard_assign_2.html")
rmarkdown::render("Dashboard assign #2.Rmd", output_file = "E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work/Dashboard_assign_2.html")
rmarkdown::render("Dashboard assign #2.Rmd", output_file = "E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work/Dashboard_assign_2.html")
rmarkdown::render("Dashboard assign #2.Rmd", output_file = "E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work/Dashboard_assign_2.html")
rmarkdown::render("Dashboard assign #2.Rmd", output_file = "E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work/Dashboard_assign_2.html")
rmarkdown::render("Dashboard assign #2.Rmd", output_file = "E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work/Dashboard_assign_2.html")
setwd("E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work")
library(rmarkdown)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
library(flexdashboard)
library(shiny)
library(ggplot2)
library(plotly)
library(dplyr)
library(readxl)
library(rlang)
library(shiny)
# install.packages("readxl")
library(readxl)
mydata <- read_excel("Penguin data.xlsx")
mydata<- mydata[, -17]
miss_count <- colSums(is.na(mydata))
mydata <- na.omit(mydata)
mydata$"Culmen Length (mm)" <- as.numeric(mydata$"Culmen Length (mm)")
mydata$"Culmen Depth (mm)" <- as.numeric(mydata$"Culmen Depth (mm)")
mydata$"Flipper Length (mm)" <- as.numeric(mydata$"Flipper Length (mm)")
mydata$"Body Mass (g)" <- as.numeric(mydata$"Body Mass (g)")
mydata$"Delta 15 N (o/oo)" <- as.numeric(mydata$"Delta 15 N (o/oo)")
mydata$"Delta 13 C (o/oo)" <- as.numeric(mydata$"Delta 13 C (o/oo)")
mydata <- mydata %>% mutate(Sex = ifelse(Sex == "MALE", "MALE", "FEMALE"))
ggplot(mydata, aes(x = Island, fill = Species)) +
geom_bar(position = "stack") +
labs(title = "Penguin Species Counts by Island", x = "Island", y = "Count", fill = "Species")
ggplot(mydata, aes(x = `Culmen Length (mm)`, y = `Body Mass (g)`, color = Sex)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Relationship between Culmen Length and Body Mass by Sex", x = "Culmen Length (mm)", y = "Body Mass (g)", color = "Sex")
ggplot(mydata, aes(x = `Culmen Length (mm)`, y = `Body Mass (g)`, color = Species)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Relationship between Culmen Length and Body Mass by Species", x = "Culmen Length (mm)", y = "Body Mass (g)", color = "Species")
ggplot(mydata, aes(x = `Culmen Length (mm)`, y = `Culmen Depth (mm)`, color = Species)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Relationship between Culmen Length and Depth by Species", x = "Culmen Length (mm)", y = "Culmen Depth (mm)", color = "Species")
library(scales)
# convert Date Egg column to date format
mydata$`Date Egg` <- as.Date(mydata$`Date Egg`)
ggplot(mydata, aes(x = `Date Egg`, y = `Culmen Depth (mm)`)) +
geom_point(alpha = 0.2) +
geom_smooth() +
labs(title = "Trend of Culmen Depth (mm) by Island over Time", x = "Date", y = "Culmen Depth (mm)") +
facet_grid(. ~ Island) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y")
# create scatter plot of body mass vs. flipper length
ggplot(mydata, aes(x = `Flipper Length (mm)`, y = `Body Mass (g)`, color = Species)) +
geom_point(size = 2) +
labs(x = "Flipper Length (mm)", y = "Body Mass (g)", color = "Species") +
ggtitle("Body Mass vs. Flipper Length by Species")
library(scales)
library(stringr)
# convert Date Egg column to date format
mydata$`Date Egg` <- as.Date(mydata$`Date Egg`)
# extract first word of species names
mydata$short_species <- str_extract(mydata$Species, "^\\w+")
# create scatter plot of culmen length vs. year, faceted by species and sex
ggplot(mydata, aes(x = `Date Egg`, y = `Culmen Length (mm)`, color = Sex)) +
geom_point(alpha = 0.5) +
geom_smooth(se = FALSE) +
facet_grid(short_species ~ ., labeller = label_parsed) +
labs(x = "Year", y = "Culmen Length (mm)", color = "Sex") +
ggtitle("Trend of Culmen Length by Species and Sex over Time") +
scale_x_date(date_breaks = "3 months", date_labels = "%b %Y")
ggplot(mydata, aes(x = `Body Mass (g)`, y = `Delta 15 N (o/oo)`)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Body Mass (g)", y = "Delta 15 N (o/oo)",
title = "Relationship between Body Mass and Delta 15 N") +
theme_bw()
library(ggplot2)
ggplot(mydata, aes(x = `Body Mass (g)`, y = `Delta 13 C (o/oo)`)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(x = "Body Mass (g)", y = "Delta 13 C (o/oo)",
title = "Relationship between Body Mass and Delta 13 C (o/oo)") +
theme_bw()
setwd("E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work")
rmarkdown::render_site()
# create a dropdown menu for island selection
selectInput("selected_island", "Select Island:", choices = c("All", unique(mydata$Island)))
install.packages(c("shiny", "rsconnect"))
library(rsconnect)
rsconnect::setAccountInfo(name = "yourUsername", token = "yourToken", secret = "yourSecret")
rsconnect::setAccountInfo(name='anna-jazayeri',
token='015BEC6D62BD0E50C02AF87142C9C2FF',
secret='6XQZP6ydo5DCJ5IQas3jVxWEpnVLqeiXzsQ6VCPe')
library(shiny)
library(rmarkdown)
ui <- fluidPage(
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "styles.css")
),
htmlOutput("rmd")
)
server <- function(input, output, session) {
output$rmd <- renderUI({
HTML(renderText({rmarkdown::render("dashboard_asign_2.Rmd", output_format = "html_document", clean = FALSE, run_pandoc = FALSE)}))
})
}
shinyApp(ui, server)
setwd("E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work Shiny")
setwd("E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work Shiny/rmarkdown_website")
rsconnect::deployApp()
setwd("E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work Shiny/rmarkdown_website")
rsconnect::deployApp()
setwd("E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work Shiny/rmarkdown_website")
rsconnect::deployApp()
setwd("E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work Shiny/rmarkdown_website")
rmarkdown::render_site()
setwd("E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work Shiny/rmarkdown_website")
rmarkdown::render_site()
setwd("E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work Shiny/rmarkdown_website")
rmarkdown::render_site()
setwd("E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work Shiny/rmarkdown_website")
rmarkdown::render_site()
runApp()
runApp()
setwd("E:/SENECA/Semester 4/2) Intro to Data Visualization BDM 400/Week 13/My work Shiny/rmarkdown_website")
rmarkdown::render_site()
runApp()
runApp()
# Chunk 1: setup
library(flexdashboard)
library(shiny)
library(ggplot2)
library(plotly)
library(dplyr)
library(readxl)
library(rlang)
library(shiny)
# Chunk 2
# install.packages("readxl")
library(readxl)
mydata <- read_excel("Penguin data.xlsx")
mydata<- mydata[, -17]
miss_count <- colSums(is.na(mydata))
mydata <- na.omit(mydata)
mydata$"Culmen Length (mm)" <- as.numeric(mydata$"Culmen Length (mm)")
mydata$"Culmen Depth (mm)" <- as.numeric(mydata$"Culmen Depth (mm)")
mydata$"Flipper Length (mm)" <- as.numeric(mydata$"Flipper Length (mm)")
mydata$"Body Mass (g)" <- as.numeric(mydata$"Body Mass (g)")
mydata$"Delta 15 N (o/oo)" <- as.numeric(mydata$"Delta 15 N (o/oo)")
mydata$"Delta 13 C (o/oo)" <- as.numeric(mydata$"Delta 13 C (o/oo)")
mydata <- mydata %>% mutate(Sex = ifelse(Sex == "MALE", "MALE", "FEMALE"))
# Chunk 3
# shiny inputes defines here
selectInput("selected_island", "Select Island:", choices = c("All", unique(mydata$Island)))
sliderInput("body_mass_range", "Select Body Mass (g) Range:",
min = min(mydata$`Body Mass (g)`),
max = max(mydata$`Body Mass (g)`),
value = c(min(mydata$`Body Mass (g)`), max(mydata$`Body Mass (g)`)))
# Chunk 4
# create a reactive bar chart based on the selected island
output$bar_chart <- renderPlot({
# filter the data by the selected island
if (input$selected_island != "All") {
data_filtered <- mydata %>% filter(Island == input$selected_island)
} else {
data_filtered <- mydata
}
# create the bar chart
ggplot(data_filtered, aes(x = Island, fill = Species)) +
geom_bar(position = "stack") +
labs(title = "Penguin Species Counts by Island", x = "Island", y = "Count", fill = "Species")
})
# create a reactive bar chart based on the selected island
output$bar_chart <- renderPlot({
if (input$selected_island != "All") {
data_filtered <- mydata %>% filter(Island == input$selected_island)
} else {
data_filtered <- mydata
}
# create the bar chart
ggplot(data_filtered, aes(x = Island, fill = Species)) +
geom_bar(position = "stack") +
labs(title = "Penguin Species Counts by Island", x = "Island", y = "Count", fill = "Species")
})
# create a reactive bar chart based on the selected island
output$bar_chart <- renderPlot({
if (input$selected_island != "All") {
data_filtered <- mydata %>% filter(Island == input$selected_island)
} else {
data_filtered <- mydata
}
# create the bar chart
ggplot(data_filtered, aes(x = Island, fill = Species)) +
geom_bar(position = "stack") +
labs(title = "Penguin Species Counts by Island", x = "Island", y = "Count", fill = "Species")
})
# create a reactive scatter plot based on the selected body mass range
output$scatter_plot <- renderPlot({
# filter the data by the selected body mass range
data_filtered <- mydata %>% filter(`Body Mass (g)` >= input$body_mass_range[1] &
`Body Mass (g)` <= input$body_mass_range[2])
# create the scatter plot
ggplot(data_filtered, aes(x = `Culmen Length (mm)`, y = `Body Mass (g)`, color = Sex)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Relationship between Culmen Length and Body Mass by Sex", x = "Culmen Length (mm)", y = "Body Mass (g)", color = "Sex")
})
# create a reactive bar chart based on the selected island
plotOutput$bar_chart <- renderPlot({
if (input$selected_island != "All") {
data_filtered <- mydata %>% filter(Island == input$selected_island)
} else {
data_filtered <- mydata
}
# create the bar chart
ggplot(data_filtered, aes(x = Island, fill = Species)) +
geom_bar(position = "stack") +
labs(title = "Penguin Species Counts by Island", x = "Island", y = "Count", fill = "Species")
})
# create a reactive bar chart based on the selected island
output$bar_chart <- renderPlot({
if (input$selected_island != "All") {
data_filtered <- mydata %>% filter(Island == input$selected_island)
} else {
data_filtered <- mydata
}
# create the bar chart
ggplot(data_filtered, aes(x = Island, fill = Species)) +
geom_bar(position = "stack") +
labs(title = "Penguin Species Counts by Island", x = "Island", y = "Count", fill = "Species")
})
# create a reactive bar chart based on the selected island
output$bar_chart <- renderPlot({
if (input$selected_island != "All") {
data_filtered <- mydata %>% filter(Island == input$selected_island)
} else {
data_filtered <- mydata
}
ggplot(data_filtered, aes(x = Island, fill = Species)) +
geom_bar(position = "stack") +
labs(title = "Penguin Species Counts by Island", x = "Island", y = "Count", fill = "Species")
})
runApp()
runApp()
runApp()
runApp()
# Chunk 1: setup
library(flexdashboard)
library(shiny)
library(ggplot2)
library(plotly)
library(dplyr)
library(readxl)
library(rlang)
library(shiny)
# Chunk 2
# install.packages("readxl")
library(readxl)
mydata <- read_excel("Penguin data.xlsx")
mydata<- mydata[, -17]
miss_count <- colSums(is.na(mydata))
mydata <- na.omit(mydata)
mydata$"Culmen Length (mm)" <- as.numeric(mydata$"Culmen Length (mm)")
mydata$"Culmen Depth (mm)" <- as.numeric(mydata$"Culmen Depth (mm)")
mydata$"Flipper Length (mm)" <- as.numeric(mydata$"Flipper Length (mm)")
mydata$"Body Mass (g)" <- as.numeric(mydata$"Body Mass (g)")
mydata$"Delta 15 N (o/oo)" <- as.numeric(mydata$"Delta 15 N (o/oo)")
mydata$"Delta 13 C (o/oo)" <- as.numeric(mydata$"Delta 13 C (o/oo)")
mydata <- mydata %>% mutate(Sex = ifelse(Sex == "MALE", "MALE", "FEMALE"))
# Chunk 3
# shiny inputes defines here
selectInput("selected_island", "Select Island:", choices = c("All", unique(mydata$Island)))
sliderInput("body_mass_range", "Select Body Mass (g) Range:",
min = min(mydata$`Body Mass (g)`),
max = max(mydata$`Body Mass (g)`),
value = c(min(mydata$`Body Mass (g)`), max(mydata$`Body Mass (g)`)))
# Chunk 4
# create a reactive bar chart based on the selected island
output$bar_chart <- renderPlot({
if (input$selected_island != "All") {
data_filtered <- mydata %>% filter(Island == input$selected_island)
} else {
data_filtered <- mydata
}
# create the bar chart
ggplot(data_filtered, aes(x = Island, fill = Species)) +
geom_bar(position = "stack") +
labs(title = "Penguin Species Counts by Island", x = "Island", y = "Count", fill = "Species")
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
